{"version":3,"sources":["media/amit_img.png","logo.svg","home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","React","createElement","className","src","image","style","color","href","MapPin","Mail","Link","data-level","width","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec930b61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/amit_img.01a7484d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport image from '../media/amit_img.png'\nimport { Link, Mail, MapPin} from 'react-feather'\nimport './home.scss'\n\nfunction Home(props) {\n\n    return (\n      <div className=\"ml-4 mr-4\">\n        <div className=\"row pt-3 pb-3 pl-3 mb-3  bg-white\">\n          <div className=\" col-md-7 text-center\">\n            <div className=\"row\">\n              <img src={image} className=\"profile-image img-responsive\" />\n              <div className=\"col my-auto\">\n                <h1 className=\"text-md-left text-sm-center\">Amit Tiwary</h1>\n                <h3 className=\"text-md-left\" style={{color: 'grey'}}>Senior Software Developer</h3>\n                <div className=\"row\">\n                  <div className=\"ml-md-2 mx-auto\">\n                    <a\n                      className=\"social p-1 ml-1\"\n                      href=\"https://linkedin.com/in/amit-tiwary-8bb081103/\"\n                    >\n                      <i className=\"fa fa-linkedin\"></i>\n                    </a>\n                    <a\n                      className=\"social p-1 ml-1\"\n                      href=\"https://github.com/amitiwary999\"\n                    >\n                      <i className=\"fa fa-github\"></i>\n                    </a>\n                    <a\n                      className=\"social p-1 ml-1\"\n                      href=\"https://stackoverflow.com/users/5216062/amit-tiwary\"\n                    >\n                      <i className=\"fa fa-stack-overflow\"></i>\n                    </a>\n                    <a\n                      className=\"social p-1 ml-1\"\n                      href=\"https://dev.to/amitiwary999\"\n                    >\n                      <i className=\"fa fa-blog\"></i>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"card p-4\">\n              <p className=\"sections-title\">About Me</p>\n              <p>\n                I am a Senior Software Engineer. I have more than 5 year of experience, 4 year of experience as backend developer, 2 and half year of experience as frontend developer and 1 and half year experience as an Android App developer. Currently, I\n                work at{\" \"}\n                <a href=\"https://www.arzooo.com/\">\n                  Arzooo\n                </a>{\" \"}\n                as Senior Software Engineer. I have done my B.Tech from MAKAUT, Kolkata\n                majoring in Computer Science and Engineering.\n                <br />\n                <br />\n                When I am not coding, I love to write blogs, listen\n                music or sort stories and watching stand-up comedy show\n              </p>\n            </div>\n            <div className=\"card p-4\">\n              <div className=\"row\">\n                <MapPin />\n                <p className=\"ml-2\">Bengaluru, Karnataka, India</p>\n              </div>\n              <div className=\"row\">\n                <Mail />\n                <p className=\"ml-2\">tiwarya9@gmail.com</p>\n              </div>\n              <div className=\"row\">\n                <Link />\n                <a className=\"ml-2\" href=\"https://amitiwary999.github.io\">\n                  amitiwary999.github.io\n                </a>\n              </div>\n            </div>\n            <div className=\"card p-4\">\n              <p className=\"sections-title\">Skills</p>\n              <p className=\"level-title mb-1\">\n                Node.Js\n              </p>\n              <div className=\"level-bar\">\n                <div className=\"level-bar-inner\" data-level='85%' style={{ width: '85%' }}></div>\n              </div>\n              <p className=\"level-title mb-1 mt-3\">\n                MySQL\n              </p>\n              <div className=\"level-bar\">\n                <div className=\"level-bar-inner\" data-level='70%' style={{width: '70%'}}></div>\n              </div>\n              <p className=\"level-title mb-1 mt-3\">\n                React\n              </p>\n              <div className=\"level-bar\">\n                <div className=\"level-bar-inner\" data-level='60%' style={{ width: '60%' }}></div>\n              </div>\n              <p className=\"level-title mb-1 mt-3\">\n                JAVA\n              </p>\n              <div className=\"level-bar\">\n                <div className=\"level-bar-inner\" data-level='55%' style={{ width: '55%' }}></div>\n              </div>\n              <p className=\"level-title mb-1 mt-3\">\n                Android\n              </p>\n              <div className=\"level-bar\">\n                <div className=\"level-bar-inner\" data-level='55%' style={{ width: '55%' }}></div>\n              </div>\n              <p className=\"level-title mb-1 mt-3\">\n                AWS\n              </p>\n              <div className=\"level-bar\">\n                <div className=\"level-bar-inner\" data-level='55%' style={{width: '55%'}}></div>\n              </div>\n              <p className=\"level-title mb-1 mt-3\">\n                Python\n              </p>\n              <div className=\"level-bar\">\n                <div className=\"level-bar-inner\" data-level='35%' style={{ width: '35%' }}></div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-4\">\n            <div className=\"card p-4\">\n\n            <p className=\"job-title-header\">\n                Senior Software Engineer -{\" \"}\n                <span className=\"job-company-name\">\n                  {\" \"}\n                  <a href=\"https://www.arzooo.com/\">\n                    Arzooo\n                  </a>{\" \"}\n                  (june 2022 - present)\n                </span>\n              </p>\n              <p>\n                <li>\n                  My first project was with Catalogue team. I worked on moving the Catalogue service separate from the monolithic to handle the load. Catalogue serve the product listing, product details, pricing of product.\n                  This service get the <b>maximum load</b> because user comes to see the product first and then buy it. We moved to microservice and I created a middleware in Monolithic code to use the new Catalogue microservice to \n                  communicate between the app and the monolithic backend. It helped us to release our microservice for a few users for testing with backward compatibility. It was released for 1000 user for test and it was a successful release.\n                </li>\n                <li>\n                  After that I worked on backend for the Arzooo app, B2B e-commerce. We give COD and partial pay option to few user and it is one of the feature that <b>drive growth and GMV</b>. I worked on\n                  revamp the logic so that business team can decide user and product on which COD and partial pay can be enabled and we can control the misuse of this feature. \n                </li>\n                <li>\n                  My current project is{\" \"} <a href=\"https://gostor.com/\">gostor</a>. It is a B2C e-commerce product.  I am working on Category and offer page curation. These pages use to show the \n                  best offers on category and products so that user can find the offers easily and increase the chance of user <b>buying</b> the product. My responsibility is to create backend that can handle \n                  the load when lots of user directly comes to this page and admin dashboard so that business team can manage these pages.\n                </li>\n              </p>\n              \n              <p className=\"job-title-header\">\n                Senior Software Engineer -{\" \"}\n                <span className=\"job-company-name\">\n                  {\" \"}\n                  <a href=\"https://www.linkedin.com/company/superproai/\">\n                    Superpro.ai\n                  </a>{\" \"}\n                  (june 2018 - june-2022)\n                </span>\n              </p>\n              <p>\n                I worked on different technology here. NodeJs, React MySQL, Firebase, AWS, Kotlin, Android app development\n                <li>\n                  I worked on the backend, first version of website and Android App,{\" \"} <a href=\"https://play.google.com/store/apps/details?id=com.vayam.app\">Vayam</a>. It's one stop platform to watch community live stream, recorded content and do virtual meeting.\n                  Migrate our backend to microservice from monolithic using AWS EC2, Lambda and Amazon SQS tp support 20K people simultaneously in a live stream, send notification and show the dashboard data. I led the six people team to develop the software.\n                </li>\n                <li>\n                I build the Real-time chat app, ShutApp, from scratch using RxJava,\n                Kotlin, Android Jetpack library, Material design, build a scheduler to add offline support i.e user can send the message even if user is offline and \n                scheduler send message once user comes online or retry to send failed messages.\n                </li>\n              </p>\n\n              <p className=\"job-title-header\">\n                Android App Developer Intern -{\" \"}\n                <span className=\"job-company-name\">\n                  Samosa Labs (Feb 2018 - April 2018)\n                </span>\n              </p>\n              <p>\n                I worked on Samosa Android app. My job was to update their\n                android app according to new design, implement new features and\n                remove bugs.\n              </p>\n\n              <p className=\"job-title-header\">\n                Student Developer -{\" \"}\n                <span className=\"job-company-name\">\n                  {\" \"}\n                  <a href=\"https://summerofcode.withgoogle.com/archive/2017/projects/5127065938427904/\">\n                    GSoC 2k17\n                  </a>{\" \"}\n                  (May 2017 - August 2017)\n                </span>\n              </p>\n              <p>\n                I was a Google Summer of Code Participant at FOSSASIA. My job at\n                FOSSASIA was to develop SUSI Android app. The main feature of\n                the app is to provide a conversational interface to provide\n                intelligent answers using the loklak/AskSusi infrastructure.\n                Along with app, I also create some skills for SUSI.\n              </p>\n            </div>\n            </div>\n          </div>\n      </div>\n    );\n}\n\nexport default Home","import React from 'react';\nimport logo from './logo.svg';\nimport Home from './home/Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}